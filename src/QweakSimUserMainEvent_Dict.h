/********************************************************************
* src/QweakSimUserMainEvent_Dict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error src/QweakSimUserMainEvent_Dict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#include "G__ci.h"
extern "C" {
extern void G__cpp_setup_tagtableQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_inheritanceQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_typetableQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_memvarQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_globalQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_memfuncQweakSimUserMainEvent_Dict();
extern void G__cpp_setup_funcQweakSimUserMainEvent_Dict();
extern void G__set_cpp_environmentQweakSimUserMainEvent_Dict();
}


#include "TROOT.h"
#include "TMemberInspector.h"
#include "QweakSimUserMainEvent.hh"
#include "QweakSimUserPrimaryEvent.hh"
#include "QweakSimUserGEM_MainEvent.hh"
#include "QweakSimUserGEM_SingleGEMEvent.hh"
#include "QweakSimUserGEM_WirePlaneEvent.hh"
#include "QweakSimUserHDC_MainEvent.hh"
#include "QweakSimUserHDC_SingleHDCEvent.hh"
#include "QweakSimUserHDC_WirePlaneEvent.hh"
#include "QweakSimUserVDC_MainEvent.hh"
#include "QweakSimUserVDC_Config.hh"
#include "QweakSimUserVDC_DriftCellEvent.hh"
#include "QweakSimUserVDC_SingleVDCEvent.hh"
#include "QweakSimUserVDC_WirePlaneEvent.hh"
#include "QweakSimUserTriggerScintillator_MainEvent.hh"
#include "QweakSimUserTriggerScintillator_DetectorEvent.hh"
#include "QweakSimUserTriggerScintillator_PMTEvent.hh"
#include "QweakSimUserCerenkov_MainEvent.hh"
#include "QweakSimUserCerenkov_OctantEvent.hh"
#include "QweakSimUserCerenkov_DetectorEvent.hh"
#include "QweakSimUserCerenkov_PMTEvent.hh"
#include "EPEvent.hh"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TClass;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TBuffer;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TMemberInspector;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TString;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_maplEvoidmUcOshortcOlesslEvoidmUgRcOallocatorlEpairlEvoidmUsPconstcOshortgRsPgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TVectorTlEfloatgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TVectorTlEdoublegR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TMatrixTBaselEfloatgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_TMatrixTBaselEdoublegR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlETStringcOallocatorlETStringgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserPrimaryEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserGEM_WirePlaneEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserGEM_SingleGEMEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserGEM_MainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserHDC_WirePlaneEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserHDC_SingleHDCEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserHDC_MainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserVDC_Config;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserVDC_WirePlaneEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserVDC_DriftCellEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserVDC_SingleVDCEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserVDC_MainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserTriggerScintillator_DetectorEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserTriggerScintillator_MainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlEQweakSimUserTriggerScintillator_DetectorEventcOallocatorlEQweakSimUserTriggerScintillator_DetectorEventgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_reverse_iteratorlEvectorlEQweakSimUserTriggerScintillator_DetectorEventcOallocatorlEQweakSimUserTriggerScintillator_DetectorEventgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserCerenkov_DetectorEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserCerenkov_PMTEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserCerenkov_OctantEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserCerenkov_MainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_vectorlEQweakSimUserCerenkov_OctantEventcOallocatorlEQweakSimUserCerenkov_OctantEventgRsPgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_reverse_iteratorlEvectorlEQweakSimUserCerenkov_OctantEventcOallocatorlEQweakSimUserCerenkov_OctantEventgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_QweakSimUserMainEvent;
extern G__linked_taginfo G__QweakSimUserMainEvent_DictLN_EPEvent;

/* STUB derived class for protected member access */
